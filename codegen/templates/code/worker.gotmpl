package {{worker_import_prefix $}}

import (
	"context"
    "github.com/go-logr/logr"
    "github.com/solo-io/autopilot/pkg/ezkube"

    {{.Project.Version}} "{{.Project.TypesImportPath}}"
)

// EDIT THIS FILE!  THIS IS SCAFFOLDING FOR YOU TO OWN!

type Worker struct {
    Client ezkube.Client
    Logger logr.Logger
}

{{- if has_inputs $ }}
    {{- if has_outputs $ }}
func (w *Worker) Sync(ctx context.Context, {{$.Project.KindLowerCamel}} *{{.Project.Version}}.{{.Project.Kind}}, inputs Inputs) (Outputs, {{$.Project.Version}}.{{$.Project.Kind}}Phase, *{{$.Project.Version}}.{{$.Project.Kind}}StatusInfo, error) {
    {{- else}}
func (w *Worker) Sync(ctx context.Context, {{$.Project.KindLowerCamel}} *{{.Project.Version}}.{{.Project.Kind}}, inputs Inputs) ({{$.Project.Version}}.{{$.Project.Kind}}Phase, *{{$.Project.Version}}.{{$.Project.Kind}}StatusInfo, error) {
    {{- end}}
{{- else}}
    {{- if has_outputs $ }}
func (w *Worker) Sync(ctx context.Context, {{$.Project.KindLowerCamel}} *{{.Project.Version}}.{{.Project.Kind}}) (Outputs, {{$.Project.Version}}.{{$.Project.Kind}}Phase, *{{$.Project.Version}}.{{$.Project.Kind}}StatusInfo, error) {
    {{- else}}
func (w *Worker) Sync(ctx context.Context, {{$.Project.KindLowerCamel}} *{{.Project.Version}}.{{.Project.Kind}}) ({{$.Project.Version}}.{{$.Project.Kind}}Phase, *{{$.Project.Version}}.{{$.Project.Kind}}StatusInfo, error) {
    {{- end}}
{{- end}}
    panic("implement me!")
}
