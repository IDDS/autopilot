package metrics

import (
	"time"

	"github.com/solo-io/autopilot/pkg/metrics"
)

type {{$.Kind}}Metrics interface {
	metrics.Client
{{- range $query := $.Queries }}
	Get{{upper_camel $query.Name}}(ctx context.Context, {{ join $query.Parameters ", " }} string) (*metrics.QueryResult, error)
{{- end }}
}

type metricsClient struct {
	metrics.Client
}

func NewMetricsClient(client metrics.Client) *metricsClient {
	return &metricsClient{Client: client}
}

{{- range $query := $.Queries }}

func (c *metricsClient) Get{{upper_camel $query.Name}}(ctx context.Context, {{ join $query.Parameters ", " }} string) (*metrics.QueryResult, error) {
	queryTemplate := `{{ $query.QueryTemplate }}`
	queryParameters := map[string]string{
	{{- range $param := $query.Parameters }}
	"{{$param}}": {{$param}},
	{{- end}}
	}
	return c.Client.RunQuery(ctx, queryTemplate, queryParameters)
}
{{- end }}
